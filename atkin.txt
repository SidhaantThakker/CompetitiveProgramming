vector<ll> Atkin(int lim){
    vi primes;
    if(lim>2)
        primes.push_back(2);
    if(lim>3)
        primes.push_back(3);

    bool sieve[lim];
    fi(lim){
        sieve[i] = false;
    }

    for(ll x = 1; x*x < lim; x++){
        for(ll y = 1; y*y < lim; y++){
            int n = (4*x*x) +(y*y);

            if(n<=lim && (n%12==1||n%12==5))
                sieve[n]^=true;

            n=(3*x*x)+(y*y);
            if(n<=lim && n%12==7)
                sieve[n]^=true;

            n=(3*x*x)-(y*y);
            if(x>y && n<=lim && n%12==11)
                sieve[n]^=true;
        }
    }

    for (int s=5; s*s<lim; s++) {
        if (sieve[s]) {
            for (int t=s*s; t<lim; t+=s*s)
                sieve[t]=false;
        }
    }

    for (int u = 5; u < lim; u++)
        if (sieve[u])
            primes.push_back(u);

    return primes;
}